name: "CI"
on:
  push:
    branches: [master]
  pull_request:
    types: [labeled, opened, synchronize, reopened]

jobs:
  tests:
    name: Test and analyze flutter code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Safer_PasswordStorage
        uses: actions/checkout@v2
        # with:
        #   path: ${{ github.event.repository.name }}
      - name: Obtain flutter version
        id: vars
        run: |
          # cd ${{ github.event.repository.name }}
          flutter_version=$(grep '^flutter' .tool-versions | grep -o '[0-9]\+.[0-9]\+.[0-9]\+')
          flutter_channel=$(grep '^flutter' .tool-versions | grep -o '\-[a-z]\+' | grep -o '[a-z]\+')
          echo Flutter version: $flutter_version-$flutter_channel
          echo "::set-output name=flutter_version::$(echo $flutter_version)"
          echo "::set-output name=flutter_channel::$(echo $flutter_channel)"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.vars.outputs.flutter_version }}
          channel: ${{ steps.vars.outputs.flutter_channel }}
      - name: Run format, analyze, test
        # working-directory: ./${{ github.event.repository.name }}
        run: |
          echo todo
          # flutter format --set-exit-if-changed .
          # flutter analyze --fatal-warnings
          # flutter test --coverage
  build:
    name: Build app
    needs: [tests]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # , macos-11
    steps:
      - name: Checkout Safer_PasswordStorage
        uses: actions/checkout@v2

      - name: Obtain flutter version
        id: vars
        run: |
          flutter_version=$(grep '^flutter' .tool-versions | grep -o '[0-9]\+.[0-9]\+.[0-9]\+')
          flutter_channel=$(grep '^flutter' .tool-versions | grep -o '\-[a-z]\+' | grep -o '[a-z]\+')
          echo Flutter version: $flutter_version-$flutter_channel
          echo "::set-output name=flutter_version::$(echo $flutter_version)"
          echo "::set-output name=flutter_channel::$(echo $flutter_channel)"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.vars.outputs.flutter_version }}
          channel: ${{ steps.vars.outputs.flutter_channel }}

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets['AWS_KEY_ID'] }}
          aws-secret-access-key: ${{ secrets['AWS_SECRET_ACCESS_KEY'] }}
          aws-region: ${{ secrets['AWS_REGION'] }}
          mask-aws-account-id: no

      - name: Build Android app
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          make build-Linux

      - name: Distribute app
        # if: (github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.flavor == 'STAGING') || github.event.label.name == 'distribute'
        run: |
          make upload-app-to-production-Linux

  #     - name: Build iOS app
  #       if: ${{ matrix.os == 'macos-11' }}
  #       run: |
  #         flutter pub get
  #         echo "Building iOS..."
  #         echo "Not implemented yet."

  #     - name: 'Upload Builds'
  #       uses: actions/upload-artifact@v2
  #       if: ${{ matrix.os == 'ubuntu-latest' }}
  #       with:
  #         name: builds
  #         path: |
  #           build/app/outputs/flutter-apk/app-release.apk
  #           build/app/outputs/bundle/release/app-release.aab
  #         retention-days: 5
